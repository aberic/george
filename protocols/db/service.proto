/*
 * Copyright (c) 2020. Aberic - All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option go_package = "github.com/george/protocols/db";
option java_package = "cn.aberic.george.protocols.db";
option java_outer_classname = "ServiceProto";

package db;

import "db/user.proto";
import "db/page.proto";
import "db/database.proto";
import "db/view.proto";
import "db/index.proto";
import "db/disk.proto";
import "db/memory.proto";

service UserService {
  rpc login(RequestLogin) returns (Response);
}

service PageService {
  rpc pages(Request) returns (PageList);
  rpc page_create(RequestPageCreate) returns (Response);
  rpc page_modify(RequestPageModify) returns (Response);
  rpc page_info(RequestPageInfo) returns (ResponsePageInfo);
  rpc page_remove(RequestPageRemove) returns (Response);
}

service DatabaseService {
  rpc databases(Request) returns (DatabaseList);
  rpc database_create(RequestDatabaseCreate) returns (Response);
  rpc database_modify(RequestDatabaseModify) returns (Response);
  rpc database_info(RequestDatabaseInfo) returns (ResponseDatabaseInfo);
  rpc database_remove(RequestDatabaseRemove) returns (Response);
}

service ViewService {
  rpc views(RequestViewList) returns (ViewList);
  rpc view_create(RequestViewCreate) returns (Response);
  rpc view_modify(RequestViewModify) returns (Response);
  rpc view_info(RequestViewInfo) returns (ResponseViewInfo);
  rpc view_remove(RequestViewRemove) returns (Response);
  rpc view_archive(RequestViewArchive) returns (Response);
  rpc view_record(RequestViewRecord) returns (ResponseViewRecord);
}

service IndexService {
  rpc indexes(RequestIndexList) returns (IndexList);
  rpc index_create(RequestIndexCreate) returns (Response);
  rpc index_info(RequestIndexInfo) returns (ResponseIndexInfo);
}

service DiskService {
  rpc put(RequestDiskInto) returns (Response);
  rpc set(RequestDiskInto) returns (Response);
  rpc get(RequestDiskOut) returns (ResponseDiskOut);
  rpc get_by_index(RequestDiskIOut) returns (ResponseDiskOut);
  rpc remove(RequestDiskRemove) returns (Response);
  rpc select(RequestDiskSelect) returns (ResponseDiskSelect);
  rpc delete(RequestDiskDelete) returns (ResponseDiskDelete);
}

service MemoryService {
  rpc put(RequestMemoryInto) returns (Response);
  rpc set(RequestMemoryInto) returns (Response);
  rpc get(RequestMemoryOut) returns (ResponseMemoryOut);
  rpc remove(RequestMemoryRemove) returns (Response);
  rpc put_by_page(RequestMemoryPInto) returns (Response);
  rpc set_by_page(RequestMemoryPInto) returns (Response);
  rpc get_by_page(RequestMemoryPOut) returns (ResponseMemoryPOut);
  rpc remove_by_page(RequestMemoryPRemove) returns (Response);

}

message Request {}

message Response {}
