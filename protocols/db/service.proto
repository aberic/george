/*
 * Copyright (c) 2020. Aberic - All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option go_package = "github.com/george/protocols/db";
option java_package = "cn.aberic.george.protocols.db";
option java_outer_classname = "ServiceProto";

package db;

import "db/user.proto";
import "db/page.proto";
import "db/database.proto";
import "db/view.proto";
import "db/index.proto";
import "db/disk.proto";
import "db/memory.proto";
import "comm/request.proto";
import "comm/response.proto";

service UserService {
  rpc login(RequestLogin) returns (comm.Response);
}

service PageService {
  rpc list(comm.Request) returns (PageList);
  rpc create(RequestPageCreate) returns (comm.Response);
  rpc modify(RequestPageModify) returns (comm.Response);
  rpc info(RequestPageInfo) returns (ResponsePageInfo);
  rpc remove(RequestPageRemove) returns (comm.Response);
}

service DatabaseService {
  rpc list(comm.Request) returns (DatabaseList);
  rpc create(RequestDatabaseCreate) returns (comm.Response);
  rpc modify(RequestDatabaseModify) returns (comm.Response);
  rpc info(RequestDatabaseInfo) returns (ResponseDatabaseInfo);
  rpc remove(RequestDatabaseRemove) returns (comm.Response);
}

service ViewService {
  rpc list(RequestViewList) returns (ViewList);
  rpc create(RequestViewCreate) returns (comm.Response);
  rpc modify(RequestViewModify) returns (comm.Response);
  rpc info(RequestViewInfo) returns (ResponseViewInfo);
  rpc remove(RequestViewRemove) returns (comm.Response);
  rpc archive(RequestViewArchive) returns (comm.Response);
  rpc record(RequestViewRecord) returns (ResponseViewRecord);
  rpc records(RequestViewRecords) returns (ResponseViewRecords);
}

service IndexService {
  rpc list(RequestIndexList) returns (IndexList);
  rpc create(RequestIndexCreate) returns (comm.Response);
  rpc info(RequestIndexInfo) returns (ResponseIndexInfo);
}

service DiskService {
  rpc put(RequestDiskInto) returns (comm.Response);
  rpc set(RequestDiskInto) returns (comm.Response);
  rpc get(RequestDiskOut) returns (ResponseDiskOut);
  rpc get_by_index(RequestDiskIOut) returns (ResponseDiskOut);
  rpc remove(RequestDiskRemove) returns (comm.Response);
  rpc select(RequestDiskSelect) returns (ResponseDiskSelect);
  rpc delete(RequestDiskDelete) returns (ResponseDiskDelete);
}

service MemoryService {
  rpc put(RequestMemoryInto) returns (comm.Response);
  rpc set(RequestMemoryInto) returns (comm.Response);
  rpc get(RequestMemoryOut) returns (ResponseMemoryOut);
  rpc remove(RequestMemoryRemove) returns (comm.Response);
  rpc put_by_page(RequestMemoryPInto) returns (comm.Response);
  rpc set_by_page(RequestMemoryPInto) returns (comm.Response);
  rpc get_by_page(RequestMemoryPOut) returns (ResponseMemoryPOut);
  rpc remove_by_page(RequestMemoryPRemove) returns (comm.Response);
}
